#version 330 core

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 texCoord;
layout(location = 2) in vec3 normal;

out vec2 TexCoord;
out vec3 Normal;
out vec3 FragPosition;
out vec4 FragPositionLightSpace;

uniform mat4 lightMatrix;
uniform mat4 MVP;
uniform mat4 modelMatrix;

void main()
{	
	gl_Position = MVP*vec4(position, 1.0f);

	TexCoord = vec2(texCoord.x, 1.0f - texCoord.y);
	Normal = normalize(transpose(inverse(mat3(modelMatrix))) * normal);
	FragPosition = vec3(modelMatrix * vec4(position, 1.0f));
	FragPositionLightSpace = lightMatrix * vec4(FragPosition, 1.0f);
}