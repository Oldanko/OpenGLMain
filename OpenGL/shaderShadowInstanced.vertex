#version 430 core

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 texCoord;
layout(location = 2) in vec3 normal;
layout(location = 3) in mat4 modelMatrix;

out vec2 TexCoord;
out vec3 Normal;
out vec3 FragPosition;
out vec4 FragPositionLightSpace;
out float Height;

layout(location = 0) uniform mat4 VP;
layout(location = 2) uniform mat4 lightMatrix;

layout(location = 4) uniform float heightOffset;

void main()
{	
	vec4 worldSpace = modelMatrix * vec4(position, 1);

	gl_Position = VP* (worldSpace + vec4(0.0, heightOffset, 0.0, 0.0));
	
	TexCoord = vec2(texCoord.x, 1.0f - texCoord.y);
	Normal = normalize(transpose(inverse(mat3(modelMatrix))) * normal);
	FragPosition = vec3(modelMatrix * vec4(position, 1.0f));
	FragPositionLightSpace = lightMatrix * vec4(FragPosition, 1.0f);
	Height = worldSpace.y;
}