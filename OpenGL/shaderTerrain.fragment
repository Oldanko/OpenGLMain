#version 430 core

out vec4 outColor;

in vec3 Normal;
in vec2 UV;
in float Height;
in float slope;

uniform sampler2D noiseTex;

layout(location = 3) uniform vec3 lightDirection;
layout(location = 5) uniform vec2 heightTest;

void main()
{	
	if(heightTest.x != 0 && heightTest.y*heightTest.x > Height*heightTest.x)
		discard;
	
	vec3 grassland = vec3(70/255.0, 108/255.0, 8/255.0); 
	vec3 rock = vec3(120/255.0, 120/255.0, 120/255.0);
	vec3 bottom = vec3(58/255.0, 37/255.0, 30/255.0);

	vec3 color = grassland;

	float slopeMin = 0.98;
	float slopeMax = 0.95;

	float bottomMin = 1.35;
	float bottomMax = 2.0;


	if(Height < bottomMin)
		color = bottom;
	
	else if(Height < bottomMax)
	{
		float k = (Height - bottomMin)/(bottomMax - bottomMin);
		color = (grassland * k + bottom * (1 - k));
	}
	
	else if(slope < slopeMax)
		color = rock;
	
	else if(slope < slopeMin)
	{
		float k = (slope - slopeMax)/(slopeMin-slopeMax);
		color = (grassland * k + rock * (1 - k));
	}

	vec3 noise = texture(noiseTex, UV/64).xyz;
	noise /= 10;
	noise += 0.9;

	color *= noise;

	outColor = vec4(Normal, 1.0f);
	//outColor = vec4(vec3(power), 1.0);
}