#version 330 core

out vec4 outColor;

in vec3 Normal;
uniform vec3 lightDirection;

void main()
{	
	float slope = max(dot(Normal, vec3(0.0, 1.0, 0.0)), 0.0);
	
	float power = max(dot(Normal, normalize(lightDirection)), 0.0);

	vec3 grassland = vec3(57/255.0, 108/255.0, 8/255.0); 
	vec3 rock = vec3(120/255.0, 120/255.0, 120/255.0);

	vec3 color = grassland * slope;

	float slopeMin = 0.98;
	float slopeMax = 0.95;

	if(slope < slopeMax)
		color = rock * slope;
	else if(slope < slopeMin)
	{
		float k = (slope - slopeMax)/(slopeMin-slopeMax);
		color = (grassland * k + rock * (1 - k)) * slope;
	}

	outColor = vec4(power*color, 1.0f);
	//outColor = vec4(vec3(power), 1.0);
}