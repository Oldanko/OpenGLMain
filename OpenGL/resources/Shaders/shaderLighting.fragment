#version 430 core

in vec2 UV;

out vec4 outColor;

layout(location = 0) uniform sampler2D Color;
layout(location = 1) uniform sampler2D Normal;
layout(location = 2) uniform sampler2D Position;

layout(location = 3) uniform vec3 LightDirection;

void main()
{
	vec3 color = texture(Color, UV).rgb;
	vec3 normal = (texture(Normal, UV).rgb);
	if(normal == vec3(0,0,0))
		discard;

	normal = normal*2 - vec3(1.0);

	float diffuse = max(dot(normalize(normal), LightDirection), 0.0);
	float ambient = 0.1f;

	outColor = vec4(color * diffuse + color * ambient, 1.0f);
}