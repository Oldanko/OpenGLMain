#version 330 core

layout(location = 0) in vec2 pos;
layout(location = 1) in float height;
layout(location = 2) in vec3 normal;

out vec2 TexCoord;
out vec3 Normal;
out vec3 FragPosition;
out vec4 FragPositionLightSpace;

uniform mat4 lightMatrix;
uniform mat4 MVP;

void main()
{	
	vec3 position = vec3(pos.x, height, pos.y);
	mat4 modelMatrix = mat4(1.0f);

	gl_Position = MVP*vec4(position, 1);
	
	TexCoord = vec2(pos.x, pos.y);
	Normal = normalize(transpose(inverse(mat3(modelMatrix))) * normal);
	FragPosition = vec3(modelMatrix * vec4(position, 1.0f));
	FragPositionLightSpace = lightMatrix * vec4(FragPosition, 1.0f);

	/*TexCoord = position;
	Normal = normalize(normal);
	//FragPosition = vec3(mat4(1.0 * vec4(position.x, height, position.y, 1.0f));
	FragPosition = vec3(position.x, height, position.y);
	FragPositionLightSpace = lightMatrix * vec4(FragPosition, 1.0f);*/
}