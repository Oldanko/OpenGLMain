#include "Shapes.h"

//void loadBox(std::vector<float>& vertices, std::vector<unsigned int>& elements)
//{
//	std::vector<float> v =
//	{
//		0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0,
//		0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0,
//		1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0,
//		1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0,
//
//		0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0,
//		1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0,
//		1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0,
//		0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0,
//
//		0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,
//		0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0,
//		1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0,
//		1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0,
//
//		0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0,
//		1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0,
//		1.0, 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0,
//		0.0, 0.0, 1.0, 0.0, 1.0, 0.0, -1.0, 0.0,
//
//		1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
//		1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0,
//		1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0,
//		1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0,
//
//		0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0,
//		0.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0,
//		0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, 0.0,
//		0.0, 1.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0,
//	};

void loadBox(std::vector<float>& vertices, std::vector<unsigned int>& elements)
{
	std::vector<float> v =
	{
		-1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0,
		-1.0, 1.0, -1.0, 0.0, 1.0, 0.0, 0.0, -1.0,
		1.0, 1.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0,
		1.0, -1.0, -1.0, 1.0, 0.0, 0.0, 0.0, -1.0,

		-1.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0,
		1.0, -1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0,
		1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0,
		-1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0,

		-1.0, 1.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0,
		-1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0,
		1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0,
		1.0, 1.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0,

		-1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0,
		1.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0,
		1.0, -1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0,
		-1.0, -1.0, 1.0, 0.0, 1.0, 0.0, -1.0, 0.0,

		1.0, -1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0,
		1.0, 1.0, -1.0, 1.0, 0.0, 1.0, 0.0, 0.0,
		1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0,
		1.0, -1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0,

		-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,
		-1.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0,
		-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, 0.0,
		-1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, 0.0,
	};

	std::vector<unsigned int> e =
	{
		0, 1, 2,
		0, 2, 3,

		4, 5, 6,
		4, 6, 7,

		8, 9, 10,
		8, 10, 11,

		12, 13, 14,
		12, 14, 15,

		16, 17, 18,
		16, 18, 19,

		20, 21, 22,
		20, 22, 23
	};

	vertices = v;
	elements = e;
}

void loadPlane(std::vector<float>& vertices, std::vector<unsigned int>& elements)
{
	std::vector<float> v =
	{
		0.0, 0.0, 0.0,	0.0, 0.0,	0.0, 1.0, 0.0,
		0.0, 0.0, 1.0,	0.0, 1.0,	0.0, 1.0, 0.0,
		1.0, 0.0, 1.0,	1.0, 1.0,	0.0, 1.0, 0.0,
		1.0, 0.0, 0.0,	1.0, 0.0,	0.0, 1.0, 0.0
	};

	std::vector<unsigned int> e =
	{
		0, 1, 2,
		0, 2, 3
	};

	vertices = v;
	elements = e;
}

void loadGrassStar(std::vector<float>& vertices, std::vector<unsigned int>& elements)
{
	std::vector<float> v =
	{
		-0.5, 0.0, 0.0, 0.0, 0.0,	0.0, 1.0, 0.0,
		-0.5, 1.0, 0.0f, 0.0, 1.0,	0.0, 1.0, 0.0,
		 0.5, 1.0, 0.0f, 1.0, 1.0,	0.0, 1.0, 0.0,
		 0.5, 0.0, 0.0, 1.0, 0.0,	0.0, 1.0, 0.0,

		-.25f, 0.0, -.443f, 0.0, 0.0,	0.0, 1.0, 0.0,
		-.25f, 1.0, -.443f, 0.0, 1.0,	0.0, 1.0, 0.0,
		 .25f, 1.0,  .443f, 1.0, 1.0,	0.0, 1.0, 0.0,
		 .25f, 0.0,  .443f, 1.0, 0.0,	0.0, 1.0, 0.0,

		 .25f, 0.0, -.443f, 0.0, 0.0,	0.0, 1.0, 0.0,
		 .25f, 1.0, -.443f, 0.0, 1.0,	0.0, 1.0, 0.0,
		-.25f, 1.0,  .443f, 1.0, 1.0,	0.0, 1.0, 0.0,
		-.25f, 0.0,  .443f, 1.0, 0.0,	0.0, 1.0, 0.0
	};

	std::vector<unsigned int> e =
	{
		0, 1, 2,
		0, 2, 3,

		4, 5, 6,
		4, 6, 7,

		8, 9, 10,
		8, 10, 11
	};

	vertices = v;
	elements = e;
}
